openapi: 3.0.3
info:
  title: Transaction Ledger API
  version: 1.0.0
  description: |
    A transaction ledger service for accounts, deposits, withdrawals, transfers, and reporting.
    Built with Rust (Axum), Kafka, and Tokio.

servers:
  - url: http://localhost:3000

paths:
  /accounts:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
      responses:
        "200":
          description: Account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountResponse"
    get:
      summary: Find accounts by owner
      parameters:
        - in: query
          name: owner
          schema:
            type: string
      responses:
        "200":
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"

  /accounts/{id}/balance:
    get:
      summary: Get account balance
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Account balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    format: int64

  /deposit:
    post:
      summary: Deposit funds into an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequest"
      responses:
        "200":
          description: Transaction ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TxResponse"

  /withdraw:
    post:
      summary: Withdraw funds from an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequest"
      responses:
        "200":
          description: Transaction ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TxResponse"

  /transfer:
    post:
      summary: Transfer funds between accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferBetweenRequest"
      responses:
        "200":
          description: Transaction ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TxResponse"

  /transactions:
    get:
      summary: List transactions
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"

  /save:
    post:
      summary: Save ledger to file
      responses:
        "200":
          description: Ledger saved

  /load:
    post:
      summary: Load ledger from file
      responses:
        "200":
          description: Ledger loaded

  /report:
    get:
      summary: Generate report
      responses:
        "200":
          description: Ledger report
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true

components:
  schemas:
    Currency:
      type: string
      enum:
        - NGN
        - USD
        - EUR
        - GBP

    CreateAccountRequest:
      type: object
      required: [owner, initial, currency, bankName, bankCode]
      properties:
        owner:
          type: string
        initial:
          type: integer
          format: int64
          description: Initial deposit in Kobo (or cents).
        currency:
          $ref: "#/components/schemas/Currency"
        bankName:
          type: string
        bankCode:
          type: string

    CreateAccountResponse:
      type: object
      required: [id, accountNumber, currency]
      properties:
        id:
          type: integer
        accountNumber:
          type: string
        currency:
          $ref: "#/components/schemas/Currency"

    Account:
      type: object
      properties:
        id:
          type: integer
        owner:
          type: string
        balance:
          type: integer
          format: int64
        currency:
          $ref: "#/components/schemas/Currency"
        bankName:
          type: string
        bankCode:
          type: string
        accountNumber:
          type: string

    TransferRequest:
      type: object
      required: [id, amount]
      properties:
        id:
          type: integer
        amount:
          type: integer
          format: int64
        description:
          type: string
          nullable: true

    TransferBetweenRequest:
      type: object
      required: [from, to, amount]
      properties:
        from:
          type: integer
        to:
          type: integer
        amount:
          type: integer
          format: int64
        description:
          type: string
          nullable: true

    TxResponse:
      type: object
      properties:
        tx_id:
          type: integer

    Transaction:
      type: object
      properties:
        id:
          type: integer
        from:
          type: integer
          nullable: true
        to:
          type: integer
          nullable: true
        amount:
          type: integer
          format: int64
        description:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
